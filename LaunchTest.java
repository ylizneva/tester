// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class LaunchTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new FirefoxDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void launch() {
    // Test name: Launch 
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("http://haw-project-labbet-test.s3-website.eu-north-1.amazonaws.com/");
    // 2 | setWindowSize | 1435x1116 | 
    driver.manage().window().setSize(new Dimension(1435, 1116));
    // 3 | click | name=username | 
    driver.findElement(By.name("username")).click();
    // 4 | verifyEditable | name=username | 
    {
      WebElement element = driver.findElement(By.name("username"));
      Boolean isEditable = element.isEnabled() && element.getAttribute("readonly") == null;
      assertTrue(isEditable);
    }
    // 5 | click | name=username | 
    driver.findElement(By.name("username")).click();
    // 6 | type | name=username | test
    driver.findElement(By.name("username")).sendKeys("test");
    // 7 | verifyElementPresent | id=loginButton | 
    {
      List<WebElement> elements = driver.findElements(By.id("loginButton"));
      assert(elements.size() > 0);
    }
    // 8 | click | id=loginButton | 
    driver.findElement(By.id("loginButton")).click();
    // 9 | click | css=.gradient-heading | 
    driver.findElement(By.cssSelector(".gradient-heading")).click();
  }
}
